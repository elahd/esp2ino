[
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET_ESP8266", 
        "name": "IDF_TARGET_ESP8266", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_CMAKE", 
        "name": "IDF_CMAKE", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET_ENV", 
        "name": "IDF_TARGET_ENV", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET", 
        "name": "IDF_TARGET", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.\n", 
                "id": "SDK_TOOLPREFIX", 
                "name": "SDK_TOOLPREFIX", 
                "range": null, 
                "title": "Compiler toolchain path/prefix", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The executable name/path that is used to run python. On some systems Python 2.x\nmay need to be invoked as python2.\n\n(Note: This option is used with the legacy GNU Make build system only.)\n", 
                "id": "SDK_PYTHON", 
                "name": "SDK_PYTHON", 
                "range": null, 
                "title": "Python 2 interpreter", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n\n(Note: this option is used with the legacy GNU Make build system only.)\n", 
                "id": "SDK_MAKE_WARN_UNDEFINED_VARIABLES", 
                "name": "SDK_MAKE_WARN_UNDEFINED_VARIABLES", 
                "range": null, 
                "title": "'make' warns on undefined variables", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "sdk-tool-configuration", 
        "title": "SDK tool configuration", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enable this option, software will initialize SPI flash clock and I/O mode at bootloader instead of at APP.\nSo it will speed up system starting and reduce the time cost at loading firmware.\n\nIf your system bootloader is based on v3.0, the option must not be enable, because the v3.0 bootloader don't support\nthis function.\n", 
                "id": "BOOTLOADER_INIT_SPI_FLASH", 
                "name": "BOOTLOADER_INIT_SPI_FLASH", 
                "range": null, 
                "title": "Bootloader init SPI flash", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enable this option, when SoC brings up and bootloader initializes hardware, it will\ndisable JTAG's I/O and set these GPIOs to be normal I/O with inputting mode.\n\nIf users use JTAG to help develop, please disable this option.\n", 
                "id": "BOOTLOADER_DISABLE_JTAG_IO", 
                "name": "BOOTLOADER_DISABLE_JTAG_IO", 
                "range": null, 
                "title": "Bootloader disable JTAG I/O", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enable this option, after initializing hardware, bootloader will try to load boot image\ninformation from RTC memory directly and then run image without verifying it.\n", 
                "id": "BOOTLOADER_FAST_BOOT", 
                "name": "BOOTLOADER_FAST_BOOT", 
                "range": null, 
                "title": "Bootloader fast boot", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_NONE", 
                        "name": "LOG_BOOTLOADER_LEVEL_NONE", 
                        "range": null, 
                        "title": "No output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_ERROR", 
                        "name": "LOG_BOOTLOADER_LEVEL_ERROR", 
                        "range": null, 
                        "title": "Error", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_WARN", 
                        "name": "LOG_BOOTLOADER_LEVEL_WARN", 
                        "range": null, 
                        "title": "Warning", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_INFO", 
                        "name": "LOG_BOOTLOADER_LEVEL_INFO", 
                        "range": null, 
                        "title": "Info", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_DEBUG", 
                        "name": "LOG_BOOTLOADER_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_VERBOSE", 
                        "name": "LOG_BOOTLOADER_LEVEL_VERBOSE", 
                        "range": null, 
                        "title": "Verbose", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Specify how much output to see in bootloader logs.\n", 
                "id": "bootloader-config-bootloader-log-verbosity", 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "title": "Bootloader log verbosity", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "LOG_BOOTLOADER_LEVEL", 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "(ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT) && IDF_TARGET_ESP32", 
                "help": "This value is ignored unless flash mode is set to QIO or QOUT *and* the SPI flash pins have been\noverriden by setting the efuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the Efuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka ESP32\npin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in Efuse. That pin number is compiled into the bootloader\ninstead.\n\nThe default value (GPIO 7) is correct for WP pin on ESP32-D2WD integrated flash.\n", 
                "id": "BOOTLOADER_SPI_WP_PIN", 
                "name": "BOOTLOADER_SPI_WP_PIN", 
                "range": null, 
                "title": "SPI Flash WP Pin when customising pins via efuse (read help)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && IDF_TARGET_ESP32 && <choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "range": null, 
                        "title": "1.8V", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "range": null, 
                        "title": "1.9V", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "IDF_TARGET_ESP32", 
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using EFUSE\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via efuse.\n", 
                "id": "bootloader-config-vddsdio-ldo-voltage", 
                "name": "BOOTLOADER_VDDSDIO_BOOST", 
                "title": "VDDSDIO LDO voltage", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET && IDF_TARGET_ESP32", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a factory reset, this GPIO must be pulled low on reset.\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "range": null, 
                        "title": "Number of the GPIO input for factory reset", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a factory reset.\n", 
                        "id": "BOOTLOADER_OTA_DATA_ERASE", 
                        "name": "BOOTLOADER_OTA_DATA_ERASE", 
                        "range": null, 
                        "title": "Clear OTA data on factory reset (select factory partition)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this: \"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.\n", 
                        "id": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "name": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "range": null, 
                        "title": "Comma-separated names of partitions to clear on factory reset", 
                        "type": "string"
                    }
                ], 
                "depends_on": "IDF_TARGET_ESP32", 
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_FACTORY_RESET", 
                "name": "BOOTLOADER_FACTORY_RESET", 
                "range": null, 
                "title": "GPIO triggers factory reset", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_APP_TEST && IDF_TARGET_ESP8266", 
                        "help": "For the small SPI Flash solution, there maybe no enough space for the test app partition.\nBy enable this option, test app will locate in ota_1 partition by default.\nAfter ota, the test app will be erased and re-write as new app.\n\nIf you disable this, make sure there has a test app partition in you partition table CVS.\n", 
                        "id": "BOOTLOADER_APP_TEST_IN_OTA_1", 
                        "name": "BOOTLOADER_APP_TEST_IN_OTA_1", 
                        "range": null, 
                        "title": "Put test app in the ota_1 partition", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_APP_TEST", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app(the second ota firmware), this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\n", 
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "range": null, 
                        "title": "Number of the GPIO input to boot TEST partition", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_APP_TEST", 
                "name": "BOOTLOADER_APP_TEST", 
                "range": null, 
                "title": "GPIO triggers boot from test app partition", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST", 
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.\n", 
                "id": "BOOTLOADER_HOLD_TIME_GPIO", 
                "name": "BOOTLOADER_HOLD_TIME_GPIO", 
                "range": null, 
                "title": "Hold time of GPIO for reset/test mode (seconds)", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Bootloader store offset in the flash, if you have extra private bootloader to boot the\nbootloader of the SDK's bootloader, you can set the option to store SDK's bootloader\nto other space in the flash instead of \"0x0\".\n", 
                "id": "BOOTLOADER_STORE_OFFSET", 
                "name": "BOOTLOADER_STORE_OFFSET", 
                "range": null, 
                "title": "Bootloader store offset in the flash", 
                "type": "hex"
            }
        ], 
        "depends_on": null, 
        "id": "bootloader-config", 
        "title": "Bootloader config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A digest is generated from the bootloader image itself. This digest will be verified on each subsequent boot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.\n", 
                                "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "range": null, 
                                "title": "One-time flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing key.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device allows reflashing of any device that uses it.\n", 
                                "id": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "name": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "range": null, 
                                "title": "Reflashable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "SECURE_BOOT_ENABLED && IDF_TARGET_ESP32", 
                        "help": null, 
                        "id": "security-features-enable-secure-boot-in-bootloader-read-docs-first--secure-bootloader-mode", 
                        "name": "SECURE_BOOTLOADER_MODE", 
                        "title": "Secure bootloader mode", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES && IDF_TARGET_ESP32", 
                                "help": "Path to the key file used to sign partition tables and app images for secure boot. Once secure boot is enabled, bootloader will only boot if partition table and app image are signed.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee docs/security/secure-boot.rst for details.\n", 
                                "id": "SECURE_BOOT_SIGNING_KEY", 
                                "name": "SECURE_BOOT_SIGNING_KEY", 
                                "range": null, 
                                "title": "Secure boot private signing key", 
                                "type": "string"
                            }
                        ], 
                        "depends_on": "SECURE_BOOT_ENABLED && IDF_TARGET_ESP32", 
                        "help": "Once secure boot is enabled, bootloader will only boot if partition table and app image are signed.\n\nIf enabled, these binary files are signed as part of the build process. The file named in \"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py (for example, on a remote signing server.)\n", 
                        "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                        "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                        "range": null, 
                        "title": "Sign binaries during build", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_ENABLED && !SECURE_BOOT_BUILD_SIGNED_BINARIES && IDF_TARGET_ESP32", 
                        "help": "Path to a public key file used to verify signed images. This key is compiled into the bootloader,\nand may also be used to verify signatures on OTA images after download.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to https://esp-idf.readthedocs.io/en/latest/security/secure-boot.html before enabling.\n", 
                        "id": "SECURE_BOOT_VERIFICATION_KEY", 
                        "name": "SECURE_BOOT_VERIFICATION_KEY", 
                        "range": null, 
                        "title": "Secure boot public signature verification key", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_ENABLED && IDF_TARGET_ESP32", 
                        "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a custom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to https://esp-idf.readthedocs.io/en/latest/security/secure-boot.html before enabling.\n", 
                        "id": "SECURE_BOOT_INSECURE", 
                        "name": "SECURE_BOOT_INSECURE", 
                        "range": null, 
                        "title": "Allow potentially insecure options", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "IDF_TARGET_ESP32", 
                "help": "Build a bootloader which enables secure boot on first boot.\n\nOnce enabled, secure boot will not boot a modified bootloader. The bootloader will only load a partition table or boot an app if the data has a verified digital signature. There are implications for reflashing updated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.\n\nRefer to https://esp-idf.readthedocs.io/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_ENABLED", 
                "name": "SECURE_BOOT_ENABLED", 
                "range": null, 
                "title": "Enable secure boot in bootloader (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_ENABLED && IDF_TARGET_ESP32", 
                        "help": "You can disable some of the default protections offered by flash encryption, in order to enable testing or a custom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to docs/security/secure-boot.rst and docs/security/flash-encryption.rst for details.\n", 
                        "id": "FLASH_ENCRYPTION_INSECURE", 
                        "name": "FLASH_ENCRYPTION_INSECURE", 
                        "range": null, 
                        "title": "Allow potentially insecure options", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "IDF_TARGET_ESP32", 
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://esp-idf.readthedocs.io/en/latest/security/flash-encryption.html before enabling.\n", 
                "id": "FLASH_ENCRYPTION_ENABLED", 
                "name": "FLASH_ENCRYPTION_ENABLED", 
                "range": null, 
                "title": "Enable flash encryption on boot (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "(SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE) && IDF_TARGET_ESP32", 
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via efuse.\n\nIf this option is set, this efuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "range": null, 
                        "title": "Leave ROM BASIC Interpreter available on reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "(SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE) && IDF_TARGET_ESP32", 
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot when either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption and some of the protections of secure boot.\n\nOnly set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_JTAG", 
                        "name": "SECURE_BOOT_ALLOW_JTAG", 
                        "range": null, 
                        "title": "Allow JTAG Debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE && IDF_TARGET_ESP32", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on first boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_ENCRYPT", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_ENCRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader encryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE && IDF_TARGET_ESP32", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on first boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash encryption.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_DECRYPT", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_DECRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader decryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE && IDF_TARGET_ESP32", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on first boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_CACHE", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_CACHE", 
                        "range": null, 
                        "title": "Leave UART bootloader flash cache enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE && IDF_TARGET_ESP32", 
                        "help": "If this option is set, all permanent secure boot changes (via Efuse) are disabled.\n\nLog output will state changes which would be applied, but they will not be.\n\nThis option is for testing purposes only - it completely disables secure boot protection.\n", 
                        "id": "SECURE_BOOT_TEST_MODE", 
                        "name": "SECURE_BOOT_TEST_MODE", 
                        "range": null, 
                        "title": "Secure boot test mode: don't permanently set any efuses", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "IDF_TARGET_ESP32", 
                "id": "security-features-potentially-insecure-options", 
                "title": "Potentially insecure options", 
                "type": "menu"
            }
        ], 
        "depends_on": "IDF_TARGET_ESP32", 
        "id": "security-features", 
        "title": "Security features", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n", 
                "id": "ESPTOOLPY_PORT", 
                "name": "ESPTOOLPY_PORT", 
                "range": null, 
                "title": "Default serial port", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_115200B", 
                        "name": "ESPTOOLPY_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_230400B", 
                        "name": "ESPTOOLPY_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_921600B", 
                        "name": "ESPTOOLPY_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_2MB", 
                        "name": "ESPTOOLPY_BAUD_2MB", 
                        "range": null, 
                        "title": "2Mbaud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_OTHER", 
                        "name": "ESPTOOLPY_BAUD_OTHER", 
                        "range": null, 
                        "title": "Other baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n", 
                "id": "serial-flasher-config-default-baud-rate", 
                "name": "ESPTOOLPY_BAUD", 
                "title": "Default baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "name": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Other baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BAUD", 
                "name": "ESPTOOLPY_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.\n", 
                "id": "ESPTOOLPY_COMPRESSED", 
                "name": "ESPTOOLPY_COMPRESSED", 
                "range": null, 
                "title": "Use compressed upload", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_QIO", 
                        "name": "ESPTOOLPY_FLASHMODE_QIO", 
                        "range": null, 
                        "title": "QIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_QOUT", 
                        "name": "ESPTOOLPY_FLASHMODE_QOUT", 
                        "range": null, 
                        "title": "QOUT", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_DIO", 
                        "name": "ESPTOOLPY_FLASHMODE_DIO", 
                        "range": null, 
                        "title": "DIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHMODE_DOUT", 
                        "name": "ESPTOOLPY_FLASHMODE_DOUT", 
                        "range": null, 
                        "title": "DOUT", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.\n\nThe esptool.py flashes firmware at DIO mode when user select \"QIO\", \"QOUT\" or \"DIO\" mode.\n", 
                "id": "serial-flasher-config-flash-spi-mode", 
                "name": "FLASHMODE", 
                "title": "Flash SPI mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHMODE", 
                "name": "ESPTOOLPY_FLASHMODE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "SPI_FLASH_MODE", 
                "name": "SPI_FLASH_MODE", 
                "range": null, 
                "title": null, 
                "type": "hex"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_80M", 
                        "name": "ESPTOOLPY_FLASHFREQ_80M", 
                        "range": null, 
                        "title": "80 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_40M", 
                        "name": "ESPTOOLPY_FLASHFREQ_40M", 
                        "range": null, 
                        "title": "40 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_26M", 
                        "name": "ESPTOOLPY_FLASHFREQ_26M", 
                        "range": null, 
                        "title": "26 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_20M", 
                        "name": "ESPTOOLPY_FLASHFREQ_20M", 
                        "range": null, 
                        "title": "20 MHz", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The SPI flash frequency to be used.\n", 
                "id": "serial-flasher-config-flash-spi-speed", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "title": "Flash SPI speed", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHFREQ", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "SPI_FLASH_FREQ", 
                "name": "SPI_FLASH_FREQ", 
                "range": null, 
                "title": null, 
                "type": "hex"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "range": null, 
                        "title": "1 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "range": null, 
                        "title": "2 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "range": null, 
                        "title": "4 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "range": null, 
                        "title": "8 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "range": null, 
                        "title": "16 MB", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "SPI flash size, in megabytes. Users must not configure a larger value than their real flash size.\nOtherwise an unexpected result may cause if users read/write a wrong address of flash.\n", 
                "id": "serial-flasher-config-flash-size", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "title": "Flash size", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHSIZE", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "SPI_FLASH_SIZE", 
                "name": "SPI_FLASH_SIZE", 
                "range": null, 
                "title": null, 
                "type": "hex"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_RESET", 
                        "name": "ESPTOOLPY_BEFORE_RESET", 
                        "range": null, 
                        "title": "Reset to bootloader", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_NORESET", 
                        "name": "ESPTOOLPY_BEFORE_NORESET", 
                        "range": null, 
                        "title": "No reset", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-before-flashing", 
                "name": "ESPTOOLPY_BEFORE", 
                "title": "Before flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BEFORE", 
                "name": "ESPTOOLPY_BEFORE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_HARD_RESET", 
                        "name": "ESPTOOLPY_AFTER_HARD_RESET", 
                        "range": null, 
                        "title": "Hard reset after flashing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_SOFT_RESET", 
                        "name": "ESPTOOLPY_AFTER_SOFT_RESET", 
                        "range": null, 
                        "title": "Soft reset after flashing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_NORESET", 
                        "name": "ESPTOOLPY_AFTER_NORESET", 
                        "range": null, 
                        "title": "Stay in bootloader", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP8266 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-after-flashing", 
                "name": "ESPTOOLPY_AFTER", 
                "title": "After flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_AFTER", 
                "name": "ESPTOOLPY_AFTER", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_9600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_9600B", 
                        "range": null, 
                        "title": "9600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_57600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_57600B", 
                        "range": null, 
                        "title": "57600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_74880B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_74880B", 
                        "range": null, 
                        "title": "74880 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_115200B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_230400B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_921600B", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_2MB", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_2MB", 
                        "range": null, 
                        "title": "2 Mbps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_MONITOR_BAUD_OTHER", 
                        "name": "ESPTOOLPY_MONITOR_BAUD_OTHER", 
                        "range": null, 
                        "title": "Custom baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Baud rate to use when running 'make monitor' to view serial output\nfrom a running chip.\n\nCan override by setting the MONITORBAUD environment variable.\n", 
                "id": "serial-flasher-config--make-monitor-baud-rate", 
                "name": "ESPTOOLPY_MONITOR_BAUD", 
                "title": "'make monitor' baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL", 
                "name": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Custom baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_MONITOR_BAUD", 
                "name": "ESPTOOLPY_MONITOR_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "id": "serial-flasher-config", 
        "title": "Serial flasher config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_SINGLE_APP", 
                        "name": "PARTITION_TABLE_SINGLE_APP", 
                        "range": null, 
                        "title": "Single factory app, no OTA", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_TWO_OTA", 
                        "name": "PARTITION_TABLE_TWO_OTA", 
                        "range": null, 
                        "title": "Factory app, two OTA definitions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_CUSTOM", 
                        "name": "PARTITION_TABLE_CUSTOM", 
                        "range": null, 
                        "title": "Custom partition table CSV", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. Otherwise it's\npossible to create a new custom partition CSV for your application.\n", 
                "id": "partition-table-partition-table", 
                "name": "PARTITION_TABLE_TYPE", 
                "title": "Partition Table", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                "id": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "name": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "range": null, 
                "title": "Custom partition CSV file", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The partition table cannot be placed at application address.\n", 
                "id": "PARTITION_TABLE_OFFSET", 
                "name": "PARTITION_TABLE_OFFSET", 
                "range": null, 
                "title": "Partition table offset address at flash", 
                "type": "hex"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "PARTITION_TABLE_FILENAME", 
                "name": "PARTITION_TABLE_FILENAME", 
                "range": null, 
                "title": null, 
                "type": "string"
            }
        ], 
        "depends_on": null, 
        "id": "partition-table", 
        "title": "Partition Table", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION>", 
                        "help": null, 
                        "id": "COMPILER_OPTIMIZATION_LEVEL_DEBUG", 
                        "name": "COMPILER_OPTIMIZATION_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug (-Og)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION>", 
                        "help": null, 
                        "id": "COMPILER_OPTIMIZATION_LEVEL_RELEASE", 
                        "name": "COMPILER_OPTIMIZATION_LEVEL_RELEASE", 
                        "range": null, 
                        "title": "Release (-Os)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "This option sets compiler optimization level (gcc -O argument).\n\n- for \"Release\" setting, -Os flag is added to CFLAGS.\n- for \"Debug\" setting, -Og flag is added to CFLAGS.\n\n\"Release\" with -Os produces smaller & faster compiled code but it\nmay be harder to correlated code addresses to source files when debugging.\n\nTo add custom optimization settings, set CFLAGS and/or CPPFLAGS\nin project makefile, before including $(IDF_PATH)/make/project.mk. Note that\ncustom optimization levels may be unsupported.\n", 
                "id": "compiler-options-optimization-level", 
                "name": "COMPILER_OPTIMIZATION", 
                "title": "Optimization Level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE", 
                        "range": null, 
                        "title": "Enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT", 
                        "range": null, 
                        "title": "Silent (saves code size)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.\n", 
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE", 
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE", 
                        "range": null, 
                        "title": "Disabled (sets -DNDEBUG)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.\n", 
                "id": "compiler-options-assertion-level", 
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL", 
                "title": "Assertion level", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.\n", 
                "id": "COMPILER_CXX_EXCEPTIONS", 
                "is_menuconfig": true, 
                "name": "COMPILER_CXX_EXCEPTIONS", 
                "range": null, 
                "title": "Enable C++ exceptions", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_NONE", 
                        "name": "COMPILER_STACK_CHECK_MODE_NONE", 
                        "range": null, 
                        "title": "None", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_NORM", 
                        "name": "COMPILER_STACK_CHECK_MODE_NORM", 
                        "range": null, 
                        "title": "Normal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_STRONG", 
                        "name": "COMPILER_STACK_CHECK_MODE_STRONG", 
                        "range": null, 
                        "title": "Strong", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "COMPILER_STACK_CHECK_MODE_ALL", 
                        "name": "COMPILER_STACK_CHECK_MODE_ALL", 
                        "range": null, 
                        "title": "Overall", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n", 
                "id": "compiler-options-stack-smashing-protection-mode", 
                "name": "COMPILER_STACK_CHECK_MODE", 
                "title": "Stack smashing protection mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Stack smashing protection.\n", 
                "id": "COMPILER_STACK_CHECK", 
                "name": "COMPILER_STACK_CHECK", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.\n", 
                "id": "COMPILER_WARN_WRITE_STRINGS", 
                "name": "COMPILER_WARN_WRITE_STRINGS", 
                "range": null, 
                "title": "Enable -Wwrite-strings warning flag", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "compiler-options", 
        "title": "Compiler options", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Important: this non-mask watch dog is registered to non-mask timer0,\n           so it can not work together with PWM.\n\nEnable this non-mask watch dog can help users to debug blocking code\nwhen CPU is at critical state(disable interrupt).\n", 
                        "id": "ESP8266_NMI_WDT", 
                        "name": "ESP8266_NMI_WDT", 
                        "range": null, 
                        "title": "Enable non-mask watch dog", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP8266_XTAL_FREQ_40", 
                                "name": "ESP8266_XTAL_FREQ_40", 
                                "range": null, 
                                "title": "40 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP8266_XTAL_FREQ_26", 
                                "name": "ESP8266_XTAL_FREQ_26", 
                                "range": null, 
                                "title": "26 MHz", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "ESP8266 currently supports the following XTAL frequencies:\n\n- 26 MHz\n- 40 MHz\n", 
                        "id": "component-config-esp8266-specific-main-xtal-frequency", 
                        "name": "ESP8266_XTAL_FREQ_SEL", 
                        "title": "Main XTAL frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP8266_XTAL_FREQ", 
                        "name": "ESP8266_XTAL_FREQ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP8266_DEFAULT_CPU_FREQ_80", 
                                "name": "ESP8266_DEFAULT_CPU_FREQ_80", 
                                "range": null, 
                                "title": "80 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP8266_DEFAULT_CPU_FREQ_160", 
                                "name": "ESP8266_DEFAULT_CPU_FREQ_160", 
                                "range": null, 
                                "title": "160 MHz", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "CPU frequency to be set on application startup.\n", 
                        "id": "component-config-esp8266-specific-cpu-frequency", 
                        "name": "ESP8266_DEFAULT_CPU_FREQ_MHZ", 
                        "title": "CPU frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP8266_DEFAULT_CPU_FREQ_MHZ", 
                        "name": "ESP8266_DEFAULT_CPU_FREQ_MHZ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_FILENAME_MACRO>", 
                                "help": null, 
                                "id": "ESP_FILENAME_MACRO_NO_PATH", 
                                "name": "ESP_FILENAME_MACRO_NO_PATH", 
                                "range": null, 
                                "title": "no PATH", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_FILENAME_MACRO>", 
                                "help": null, 
                                "id": "ESP_FILENAME_MACRO_RAW", 
                                "name": "ESP_FILENAME_MACRO_RAW", 
                                "range": null, 
                                "title": "raw", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_FILENAME_MACRO>", 
                                "help": null, 
                                "id": "ESP_FILENAME_MACRO_NULL", 
                                "name": "ESP_FILENAME_MACRO_NULL", 
                                "range": null, 
                                "title": "null", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring the macro __ESP_FILE__ text.\nThree options are possible:\n\nno PATH: strip the path of macro __FILE__, for example: __FILE__=\"a/b/c/d.h\", then __ESP_FILE__=\"d.h\"\n\nraw: same as macro __FILE__\n\nnull: text is string \"null\"\n", 
                        "id": "component-config-esp8266-specific-file-name-macro-text", 
                        "name": "ESP_FILENAME_MACRO", 
                        "title": "File name macro text", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, SDK will use new \"ets_vprintf\" function instead of old code \"ets_vprintf\" which is depend on ROM\ncode \"ets_io_vprintf\".\n\nNote: Bootloader can't use this function.\n", 
                        "id": "USING_NEW_ETS_VPRINTF", 
                        "name": "USING_NEW_ETS_VPRINTF", 
                        "range": null, 
                        "title": "Using new ets_vprintf instead of rom code", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, SDK will link the old/new \"ets_printf\" and \"ets_vprintf\" to IRAM instead of flash.\nSo although flash can't be access for SoC when reading to writing, the \"ets_printf\" and \"ets_vprintf\" also can be used by user.\n\nUsing new \"ets_vprintf\" should cost more 1.6KB IRAM.\n\nNote: Bootloader can't use this function.\n", 
                        "id": "LINK_ETS_PRINTF_TO_IRAM", 
                        "name": "LINK_ETS_PRINTF_TO_IRAM", 
                        "range": null, 
                        "title": "Link ets_printf to IRAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!LINK_ETS_PRINTF_TO_IRAM", 
                        "help": "By default option, we link the ets_printf function and its calling functions\nin SPI Flash. So when the SPI Flash is working in read/write mode, and we\ncall ets_printf in high level interrupt like NMI, this behavior will cause a\ncrash, and the EXCCAUSE=0.\n\nEnable this option, we link the ets_printf in IRAM, and its calling functions\nin SPI Flash. In the entry of ets_printf, we check if the SPI Flash is working\nin read/write mode, and exit if it is. So that ets_printf will not call functions\nin SPI Flash.\n", 
                        "id": "ETS_PRINTF_EXIT_WHEN_FLASH_RW", 
                        "name": "ETS_PRINTF_EXIT_WHEN_FLASH_RW", 
                        "range": null, 
                        "title": "ets_printf exits when flash R/W", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, full 32 KB iram instead of 16 KB iram will be used as icache, so the heap use can use\nmay reduce a lot.\n", 
                        "id": "SOC_FULL_ICACHE", 
                        "name": "SOC_FULL_ICACHE", 
                        "range": null, 
                        "title": "Enable full cache mode", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "SOC_IRAM_SIZE", 
                        "name": "SOC_IRAM_SIZE", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "\"Disable main part of ROM UART print when rom bootloader process.\"\n", 
                        "id": "DISABLE_ROM_UART_PRINT", 
                        "name": "DISABLE_ROM_UART_PRINT", 
                        "range": null, 
                        "title": "Disable ROM UART print", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.\n", 
                                "id": "ESP_PANIC_PRINT_HALT", 
                                "name": "ESP_PANIC_PRINT_HALT", 
                                "range": null, 
                                "title": "Print registers and halt", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.\n", 
                                "id": "ESP_PANIC_PRINT_REBOOT", 
                                "name": "ESP_PANIC_PRINT_REBOOT", 
                                "range": null, 
                                "title": "Print registers and reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_PANIC>", 
                                "help": "Just resets the processor without outputting anything\n", 
                                "id": "ESP_PANIC_SILENT_REBOOT", 
                                "name": "ESP_PANIC_SILENT_REBOOT", 
                                "range": null, 
                                "title": "Silent reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_PANIC>", 
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.\n\nThe UART's baudrate should be 115200 or others which can be recognized by xtensa GDB.\n", 
                                "id": "ESP_PANIC_GDBSTUB", 
                                "name": "ESP_PANIC_GDBSTUB", 
                                "range": null, 
                                "title": "Invoke GDBStub", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If an unhandled exception, the panic handler is invoked.\nConfigure the panic handlers action here.\n", 
                        "id": "component-config-esp8266-specific-panic-handler-behaviour", 
                        "name": "ESP_PANIC", 
                        "title": "Panic handler behaviour", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, the reset reason function can be used, or compiler will show function linking error.\n", 
                        "id": "RESET_REASON", 
                        "name": "RESET_REASON", 
                        "range": null, 
                        "title": "Enable reset reason", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the \"ppT task\" stack size. This is the stack of the task\nwhich calls promiscuous callback function. So if user's function is\ncomplex, the stack must be set larger.\n", 
                        "id": "WIFI_PPT_TASKSTACK_SIZE", 
                        "name": "WIFI_PPT_TASKSTACK_SIZE", 
                        "range": [
                            2048, 
                            8192
                        ], 
                        "title": "ppT task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!LWIP_HIGH_THROUGHPUT && !SOC_FULL_ICACHE", 
                        "help": "Link libcore.a internal global data(.bss .data COMMON) from DRAM to IRAM.\n", 
                        "id": "ESP8266_CORE_GLOBAL_DATA_LINK_IRAM", 
                        "name": "ESP8266_CORE_GLOBAL_DATA_LINK_IRAM", 
                        "range": null, 
                        "title": "Link libcore.a internal global data to IRAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "DISABLE_FREERTOS", 
                        "help": "Some OSes should initialize their global data structure before starting them. rt-thread is like this one.\n\nFreeRTOS need not do this.\n", 
                        "id": "INIT_OS_BEFORE_START", 
                        "name": "INIT_OS_BEFORE_START", 
                        "range": null, 
                        "title": "Init OS before starting it", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP8266_OTA_FROM_OLD", 
                                "help": "The function is not released.\n\nEnable this option, after updating from old SDK to new SDK, bootloader will copy RF\nparameters from old SDK partition to new SDK partition.\n\nThen application can read the RF parameters from new partition directly.\n", 
                                "id": "LOAD_OLD_RF_PARAMETER", 
                                "name": "LOAD_OLD_RF_PARAMETER", 
                                "range": null, 
                                "title": "Load old RF Parameters", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "IDF_TARGET_ESP8266", 
                        "help": "The function is not released.\n\nEnable this option, script will generate the complete firmware for both old RTOS SDK(before V3.0)\nand NonOS SDK to update to v3 by OTA.\n\nThe old RTOS SDK(before V3.0) or NonOS SDK can download the firmware to its partition and run it as it self's application.\n", 
                        "id": "ESP8266_OTA_FROM_OLD", 
                        "name": "ESP8266_OTA_FROM_OLD", 
                        "range": null, 
                        "title": "ESP8266 update from old SDK by OTA", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The function is not released.\n\nEnable this option, when it is that \"OTA1\" application is to run after update by OTA,\nbootloader will copy \"OTA1\" application to \"OTA0\" partition and run \"OTA0\".\n", 
                        "id": "ESP8266_BOOT_COPY_APP", 
                        "name": "ESP8266_BOOT_COPY_APP", 
                        "range": null, 
                        "title": "Boot copy app", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP8266_TIME_SYSCALL_USE_FRC1", 
                                "name": "ESP8266_TIME_SYSCALL_USE_FRC1", 
                                "range": null, 
                                "title": "High-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP8266_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP8266_TIME_SYSCALL_USE_NONE", 
                                "name": "ESP8266_TIME_SYSCALL_USE_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If high-resolution timer is used, gettimeofday will\n  provide time at microsecond resolution.\n  Time will not be preserved when going into deep sleep mode.\n- If no timers are used, gettimeofday and time functions\n  return -1 and set errno to ENOSYS.\n", 
                        "id": "component-config-esp8266-specific-timers-used-for-gettimeofday-function", 
                        "name": "ESP8266_TIME_SYSCALL", 
                        "title": "Timers used for gettimeofday function", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp8266-specific", 
                "title": "ESP8266-specific", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.\n", 
                        "id": "PM_ENABLE", 
                        "name": "PM_ENABLE", 
                        "range": null, 
                        "title": "Support for power management", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-power-management", 
                "title": "Power Management", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Function \"esp_wifi_scan_get_ap_num\" return value will be less than this. It is said that user cannot\nscan more than this.\n\nUser can use own function \"esp_wifi_scan_get_ap_num_max\" to determin how many AP to scan , too.\n", 
                        "id": "SCAN_AP_MAX", 
                        "name": "SCAN_AP_MAX", 
                        "range": [
                            1, 
                            100
                        ], 
                        "title": "Max scan AP number", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, WiFi will try to send packets first from high rate(54M). If it fails, it will\ntry at low rate until the transmission is successful.\n", 
                        "id": "WIFI_TX_RATE_SEQUENCE_FROM_HIGH", 
                        "name": "WIFI_TX_RATE_SEQUENCE_FROM_HIGH", 
                        "range": null, 
                        "title": "Set WiFi TX rate from 54M to 1M", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable QoS feature\n", 
                        "id": "ESP8266_WIFI_QOS_ENABLED", 
                        "name": "ESP8266_WIFI_QOS_ENABLED", 
                        "range": null, 
                        "title": "WiFi QoS", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP8266_WIFI_AMPDU_RX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack RX window. Generally a bigger value means higher throughput and better\ncompatibility but more memory.\n", 
                                "id": "ESP8266_WIFI_RX_BA_WIN_SIZE", 
                                "name": "ESP8266_WIFI_RX_BA_WIN_SIZE", 
                                "range": null, 
                                "title": "WiFi AMPDU RX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU RX feature\n", 
                        "id": "ESP8266_WIFI_AMPDU_RX_ENABLED", 
                        "name": "ESP8266_WIFI_AMPDU_RX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU RX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMSDU feature\n", 
                        "id": "ESP8266_WIFI_AMSDU_ENABLED", 
                        "name": "ESP8266_WIFI_AMSDU_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMSDU RX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi RX buffers. Each buffer takes approximately ESP8266_WIFI_RX_BUFFER_LEN bytes of RAM.\n\nWiFi hardware use these buffers to receive all 802.11 frames.\nA higher number may allow higher throughput but increases memory use. If ESP8266_WIFI_AMPDU_RX_ENABLED\nis enabled, this value is recommended to set equal or bigger than 8*1024/ESP8266_WIFI_RX_BUFFER_LEN in order\nto achieve better throughput and compatibility with both stations and APs.\nMost of time we should NOT change the default value unless special reason, e.g. test the maximum UDP RX\nthroughput with iperf etc. For iperf test in shieldbox, the recommended value is 26.\n", 
                        "id": "ESP8266_WIFI_RX_BUFFER_NUM", 
                        "name": "ESP8266_WIFI_RX_BUFFER_NUM", 
                        "range": [
                            14, 
                            28
                        ], 
                        "title": "Max number of WiFi RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi continuous RX buffer num.\nThe smaller the value, the easier RX hang will appear. Most of time we should NOT change the default\nvalue unless special reason.\n", 
                        "id": "ESP8266_WIFI_LEFT_CONTINUOUS_RX_BUFFER_NUM", 
                        "name": "ESP8266_WIFI_LEFT_CONTINUOUS_RX_BUFFER_NUM", 
                        "range": [
                            0, 
                            16
                        ], 
                        "title": "The min number of WiFi continuous RX buffer", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the max number of signle WiFi packet.\n", 
                        "id": "ESP8266_WIFI_RX_PKT_NUM", 
                        "name": "ESP8266_WIFI_RX_PKT_NUM", 
                        "range": [
                            4, 
                            16
                        ], 
                        "title": "Max number of WiFi RX packets", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi TX packets. Each buffer takes approximately 1.6KB of RAM.\nFor some applications especially UDP applications, the upper layer can deliver frames faster than WiFi\nlayer can transmit. In these cases, we may run out of TX packets.\n", 
                        "id": "ESP8266_WIFI_TX_PKT_NUM", 
                        "name": "ESP8266_WIFI_TX_PKT_NUM", 
                        "range": [
                            4, 
                            16
                        ], 
                        "title": "Max number of WiFi TX packets", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi NVS flash\n", 
                        "id": "ESP8266_WIFI_NVS_ENABLED", 
                        "name": "ESP8266_WIFI_NVS_ENABLED", 
                        "range": null, 
                        "title": "WiFi NVS flash", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When this option is enabled, ESP8266 will connect to open router even if wifi password is set, otherwise\nESP8266 will not connect to open router when wifi password is set.\n", 
                        "id": "ESP8266_WIFI_CONNECT_OPEN_ROUTER_WHEN_PWD_IS_SET", 
                        "name": "ESP8266_WIFI_CONNECT_OPEN_ROUTER_WHEN_PWD_IS_SET", 
                        "range": null, 
                        "title": "Connect open router when wifi password is set", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to allow the device to establish a WPA3-Personal connection with eligible AP's.\nPMF (Protected Management Frames) is a prerequisite feature for a WPA3 connection, it needs to be\nexplicitly configured before attempting connection. Please refer to the Wi-Fi Driver API Guide for details.\n", 
                        "id": "ESP8266_WIFI_ENABLE_WPA3_SAE", 
                        "name": "ESP8266_WIFI_ENABLE_WPA3_SAE", 
                        "range": null, 
                        "title": "Enable WPA3-Personal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP8266_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_ERROR", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_ERROR", 
                                        "range": null, 
                                        "title": "Error", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP8266_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_WARNING", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_WARNING", 
                                        "range": null, 
                                        "title": "Warning", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP8266_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_INFO", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_INFO", 
                                        "range": null, 
                                        "title": "Info", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP8266_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_DEBUG", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_DEBUG", 
                                        "range": null, 
                                        "title": "Debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP8266_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_VERBOSE", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_VERBOSE", 
                                        "range": null, 
                                        "title": "Verbose", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP8266_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "The WiFi log is divided into the following levels: ERROR,WARNING,INFO,DEBUG,VERBOSE.\nThe ERROR level is enabled by default, and the WARNING,INFO,DEBUG,VERBOSE levels can be enabled here.\n", 
                                "id": "component-config-wi-fi-enable-wifi-debug-log-the-debug-level-is-enabled", 
                                "name": "ESP8266_WIFI_DEBUG_LOG_LEVEL", 
                                "title": "The DEBUG level is enabled", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for core module will be enabled..\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_CORE", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_CORE", 
                                        "range": null, 
                                        "title": "core", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for scan module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "range": null, 
                                        "title": "scan", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for power management module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_PM", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_PM", 
                                        "range": null, 
                                        "title": "power management", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for NVS module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_NVS", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_NVS", 
                                        "range": null, 
                                        "title": "NVS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for TRC module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_TRC", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_TRC", 
                                        "range": null, 
                                        "title": "TRC", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for EBUF module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_EBUF", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_EBUF", 
                                        "range": null, 
                                        "title": "EBUF", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for net80211 module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_NET80211", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_NET80211", 
                                        "range": null, 
                                        "title": "NET80211", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for timer module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_TIMER", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_TIMER", 
                                        "range": null, 
                                        "title": "TIMER", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for espnow module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_ESPNOW", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_ESPNOW", 
                                        "range": null, 
                                        "title": "ESPNOW", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for mac layer module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_MAC", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_MAC", 
                                        "range": null, 
                                        "title": "MAC layer", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for wpa module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPA", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPA", 
                                        "range": null, 
                                        "title": "wpa", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for wps module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPS", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPS", 
                                        "range": null, 
                                        "title": "wps", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for ampdu module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_AMPDU", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_AMPDU", 
                                        "range": null, 
                                        "title": "ampdu", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for amsdu module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_AMSDU", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_AMSDU", 
                                        "range": null, 
                                        "title": "amsdu", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for frag module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_FRAG", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_FRAG", 
                                        "range": null, 
                                        "title": "fragment", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, log for wpa2_enterprise module will be enabled.\n", 
                                        "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPA2", 
                                        "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE_WPA2", 
                                        "range": null, 
                                        "title": "wpa2_enterprise", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP8266_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "Enable this option to set the WiFi debug log submodule.\nCurrently the log submodule contains the following parts: INIT,IOCTL,CONN,SCAN.\nThe INIT submodule indicates the initialization process.The IOCTL submodule indicates the API calling\nprocess.\nThe CONN submodule indicates the connecting process.The SCAN submodule indicates the scaning process.\n", 
                                "id": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                "name": "ESP8266_WIFI_DEBUG_LOG_SUBMODULE", 
                                "range": null, 
                                "title": "WiFi debug log submodule", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi debug log\n", 
                        "id": "ESP8266_WIFI_DEBUG_LOG_ENABLE", 
                        "name": "ESP8266_WIFI_DEBUG_LOG_ENABLE", 
                        "range": null, 
                        "title": "Enable WiFi debug log", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-wi-fi", 
                "title": "Wi-Fi", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, NVS will be initialized and calibration data will be loaded from there.\nIf calibration data is not found, full calibration will be performed and stored in NVS. Normally,\nonly partial calibration will be performed. If this option is disabled, full calibration will be performed.\n\nFull calibration needs 170 - 180ms.\nPartial calibration needs 35 - 40ms.\nNo calibration needs 3.260 - 3.264ms.\n\nIf it's easy that your board calibrate bad data, choose 'n'.\nTwo cases for example, you should choose 'n':\n1.If your board is easy to be booted up with antenna disconnected.\n2.Because of your board design, each time when you do calibration, the result are too unstable.\nIf unsure, choose 'y'.\n", 
                        "id": "ESP_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "name": "ESP_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "range": null, 
                        "title": "Store phy calibration data in NVS", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, PHY init data will be loaded from a partition.\nWhen using a custom partition table, make sure that PHY data\npartition is included (type: 'data', subtype: 'phy').\nWith default partition tables, this is done automatically.\nIf PHY init data is stored in a partition, it has to be flashed there,\notherwise runtime error will occur.\n\nIf this option is not enabled, PHY init data will be embedded\ninto the application binary.\n\nIf unsure, choose 'n'.\n", 
                        "id": "ESP_PHY_INIT_DATA_IN_PARTITION", 
                        "name": "ESP_PHY_INIT_DATA_IN_PARTITION", 
                        "range": null, 
                        "title": "Use a partition to store PHY init data", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "vdd33_const provides ADC mode settings, i.e. selecting system voltage or external voltage measurements.\nWhen measuring system voltage, it must be set to 255.\nTo read the external voltage on TOUT(ADC) pin, vdd33_const need less than 255\nWhen the ADC reference voltage is set to the actual VDD33 power supply voltage, the value range of vdd33_const is [18,36], the unit is 0.1V.\nWhen the ADC reference voltage is set to the default value of 3.3V as the supply voltage, the range of vdd33_const is [0, 18] or (36, 255).\n", 
                        "id": "ESP_PHY_INIT_DATA_VDD33_CONST", 
                        "name": "ESP_PHY_INIT_DATA_VDD33_CONST", 
                        "range": [
                            0, 
                            255
                        ], 
                        "title": "vdd33_const value", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set maximum transmit power for WiFi radio. Actual transmit power for high\ndata rates may be lower than this setting.\n", 
                        "id": "ESP8266_PHY_MAX_WIFI_TX_POWER", 
                        "name": "ESP8266_PHY_MAX_WIFI_TX_POWER", 
                        "range": [
                            0, 
                            21
                        ], 
                        "title": "Max WiFi TX power (dBm)", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-phy", 
                "title": "PHY", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enable this configuration, some spi api will be placed into iram.\nAnd it will reduce iram memory.\n", 
                        "id": "ESP8266_HSPI_HIGH_THROUGHPUT", 
                        "name": "ESP8266_HSPI_HIGH_THROUGHPUT", 
                        "range": null, 
                        "title": "Do some optimization to improve throughput", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-hspi", 
                "title": "HSPI", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string representations of error codes from a\npre-generated lookup table. This option can be used to turn off the use of the look-up table in order to\nsave memory but this comes at the price of sacrificing distinguishable (meaningful) output string\nrepresentations.\n", 
                        "id": "ESP_ERR_TO_NAME_LOOKUP", 
                        "name": "ESP_ERR_TO_NAME_LOOKUP", 
                        "range": null, 
                        "title": "Enable lookup of error code strings", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event queue size in different application.\n", 
                        "id": "ESP_SYSTEM_EVENT_QUEUE_SIZE", 
                        "name": "ESP_SYSTEM_EVENT_QUEUE_SIZE", 
                        "range": null, 
                        "title": "System event queue size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event task stack size in different application.\n", 
                        "id": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "name": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Event loop task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.\n", 
                        "id": "ESP_MAIN_TASK_STACK_SIZE", 
                        "name": "ESP_MAIN_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Main task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the stack size of esp_timer/ets_timer task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\" menu.\n", 
                        "id": "ESP_TIMER_TASK_STACK_SIZE", 
                        "name": "ESP_TIMER_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "High-resolution timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_DEFAULT", 
                                "name": "ESP_CONSOLE_UART_DEFAULT", 
                                "range": null, 
                                "title": "Default: UART0, TX=GPIO1, RX=GPIO3", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM", 
                                "name": "ESP_CONSOLE_UART_CUSTOM", 
                                "range": null, 
                                "title": "Custom", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_NONE", 
                                "name": "ESP_CONSOLE_UART_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select whether to use UART for console output (through stdout and stderr).\n\n- Default is to use UART0 on pins GPIO1(TX) and GPIO3(RX).\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This output can be further suppressed by\n  bootstrapping GPIO13 pin to low logic level.\n", 
                        "id": "component-config-common-esp-related-uart-for-console-output", 
                        "name": "ESP_CONSOLE_UART", 
                        "title": "UART for console output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_0", 
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_0", 
                                "range": null, 
                                "title": "UART0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_1", 
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_1", 
                                "range": null, 
                                "title": "UART1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM", 
                        "help": "Due of a ROM bug, UART2 is not supported for console output\nvia ets_printf.\n", 
                        "id": "component-config-common-esp-related-uart-peripheral-to-use-for-console-output-0-1-", 
                        "name": "ESP_CONSOLE_UART_NUM", 
                        "title": "UART peripheral to use for console output (0-1)", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_NUM", 
                        "name": "ESP_CONSOLE_UART_NUM", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP_CONSOLE_UART_NONE", 
                        "help": null, 
                        "id": "ESP_CONSOLE_UART_BAUDRATE", 
                        "name": "ESP_CONSOLE_UART_BAUDRATE", 
                        "range": [
                            1200, 
                            4000000
                        ], 
                        "title": "UART console baud rate", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, UART0's I/O pins are swaped: TXD <-> RTS, RTX <-> CTS.\n", 
                        "id": "ESP_UART0_SWAP_IO", 
                        "name": "ESP_UART0_SWAP_IO", 
                        "range": null, 
                        "title": "Swap UART0 I/O pins", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)\n", 
                                "id": "ESP_TASK_WDT_PANIC", 
                                "name": "ESP_TASK_WDT_PANIC", 
                                "range": null, 
                                "title": "Invoke panic handler on Task Watchdog timeout", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will cause the Task Watchdog Timer to be\ninitialized automatically at startup. The Task Watchdog timer can be\ninitialized after startup as well (see Task Watchdog Timer API Reference)\n", 
                        "id": "ESP_TASK_WDT", 
                        "name": "ESP_TASK_WDT", 
                        "range": null, 
                        "title": "Initialize Task Watchdog Timer on startup", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_TASK_WDT_TIMEOUT_S>", 
                                "help": null, 
                                "id": "ESP_TASK_WDT_TIMEOUT_13N", 
                                "name": "ESP_TASK_WDT_TIMEOUT_13N", 
                                "range": null, 
                                "title": "6.5536s", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_TASK_WDT_TIMEOUT_S>", 
                                "help": null, 
                                "id": "ESP_TASK_WDT_TIMEOUT_14N", 
                                "name": "ESP_TASK_WDT_TIMEOUT_14N", 
                                "range": null, 
                                "title": "13.1072s", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP_TASK_WDT_TIMEOUT_S>", 
                                "help": null, 
                                "id": "ESP_TASK_WDT_TIMEOUT_15N", 
                                "name": "ESP_TASK_WDT_TIMEOUT_15N", 
                                "range": null, 
                                "title": "26.2144s", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time.\n", 
                        "id": "component-config-common-esp-related-task-watchdog-timeout-period-seconds-", 
                        "name": "ESP_TASK_WDT_TIMEOUT_S", 
                        "title": "Task Watchdog timeout period (seconds)", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP_TASK_WDT_TIMEOUT_S", 
                        "name": "ESP_TASK_WDT_TIMEOUT_S", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-common-esp-related", 
                "title": "Common ESP-related", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_NONE", 
                                "name": "LOG_DEFAULT_LEVEL_NONE", 
                                "range": null, 
                                "title": "No output", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_ERROR", 
                                "name": "LOG_DEFAULT_LEVEL_ERROR", 
                                "range": null, 
                                "title": "Error", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_WARN", 
                                "name": "LOG_DEFAULT_LEVEL_WARN", 
                                "range": null, 
                                "title": "Warning", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_INFO", 
                                "name": "LOG_DEFAULT_LEVEL_INFO", 
                                "range": null, 
                                "title": "Info", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "name": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "range": null, 
                                "title": "Debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "name": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "range": null, 
                                "title": "Verbose", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set function.\n\nNote that this setting limits which log statements\nare compiled into the program. So setting this to, say,\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible.\n", 
                        "id": "component-config-log-output-default-log-verbosity", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "title": "Default log verbosity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "LOG_DEFAULT_LEVEL", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable ANSI terminal color codes in bootloader output.\n\nIn order to view these, your terminal program must support ANSI color codes.\n", 
                        "id": "LOG_COLORS", 
                        "name": "LOG_COLORS", 
                        "range": null, 
                        "title": "Use ANSI terminal colors in log output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this option, user can set tag level.\n", 
                        "id": "LOG_SET_LEVEL", 
                        "name": "LOG_SET_LEVEL", 
                        "range": null, 
                        "title": "Enable log set level", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-log-output", 
                "title": "Log output", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "id": "component-config", 
        "title": "Component config", 
        "type": "menu"
    }
]